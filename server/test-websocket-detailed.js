// ะะพะดัะพะฑะฝัะน ัะตัั WebSocket ััะฝะบัะธะพะฝะฐะปัะฝะพััะธ ะผะพะดัะปั chats
import { io } from "socket.io-client";

const socket = io("http://localhost:3000");

let testChatId = null;
let testMessageId = null;

socket.on("connect", () => {
  console.log("โ ะะพะดะบะปััะตะฝ ะบ ัะตัะฒะตัั:", socket.id);

  // ะขะตัั 1: ะะพะปััะตะฝะธะต ัะฟะธัะบะฐ ัะฐัะพะฒ
  console.log("\n๐ ะขะตัั 1: ะะพะปััะตะฝะธะต ัะฟะธัะบะฐ ัะฐัะพะฒ");
  socket.emit("getChats");
});

socket.on("chatsList", (data) => {
  console.log("โ ะะพะปััะตะฝ ัะฟะธัะพะบ ัะฐัะพะฒ:", data.chats.length, "ัะฐัะพะฒ");

  if (data.chats.length > 0) {
    testChatId = data.chats[0].id;
    console.log("๐ ะัะฟะพะปัะทัะตะผ ัะฐั ะดะปั ัะตััะพะฒ:", testChatId);

    // ะขะตัั 2: ะะพะดะบะปััะตะฝะธะต ะบ ัะฐัั
    console.log("\n๐ ะขะตัั 2: ะะพะดะบะปััะตะฝะธะต ะบ ัะฐัั");
    socket.emit("joinChat", { chatId: testChatId });
  } else {
    console.log("โ ะะตั ัะฐัะพะฒ ะดะปั ัะตััะธัะพะฒะฐะฝะธั");
  }
});

socket.on("joinedChat", (data) => {
  console.log("โ ะฃัะฟะตัะฝะพ ะฟะพะดะบะปััะธะปัั ะบ ัะฐัั:", data.chatId);

  // ะขะตัั 3: ะัะฟัะฐะฒะบะฐ ัะพะพะฑัะตะฝะธั
  console.log("\n๐ฌ ะขะตัั 3: ะัะฟัะฐะฒะบะฐ ัะพะพะฑัะตะฝะธั");
  socket.emit("sendMessage", {
    chatId: testChatId,
    content: "ะขะตััะพะฒะพะต ัะพะพะฑัะตะฝะธะต ัะตัะตะท WebSocket",
    type: "TEXT",
    author: "Test User",
  });
});

socket.on("chatHistory", (data) => {
  console.log("โ ะะพะปััะตะฝะฐ ะธััะพัะธั ัะฐัะฐ:", data.messages.length, "ัะพะพะฑัะตะฝะธะน");
});

socket.on("messageSent", (data) => {
  console.log("โ ะกะพะพะฑัะตะฝะธะต ะพัะฟัะฐะฒะปะตะฝะพ:", data.messageId);
  testMessageId = data.messageId;

  // ะขะตัั 4: ะะพะปััะตะฝะธะต ัะพะพะฑัะตะฝะธะน ัะฐัะฐ
  console.log("\n๐จ ะขะตัั 4: ะะพะปััะตะฝะธะต ัะพะพะฑัะตะฝะธะน ัะฐัะฐ");
  socket.emit("getChatMessages", { chatId: testChatId });
});

socket.on("chatMessages", (data) => {
  console.log("โ ะะพะปััะตะฝั ัะพะพะฑัะตะฝะธั ัะฐัะฐ:", data.messages.length, "ัะพะพะฑัะตะฝะธะน");

  if (testMessageId) {
    // ะขะตัั 5: ะะฑะฝะพะฒะปะตะฝะธะต ัะพะพะฑัะตะฝะธั
    console.log("\nโ๏ธ ะขะตัั 5: ะะฑะฝะพะฒะปะตะฝะธะต ัะพะพะฑัะตะฝะธั");
    socket.emit("updateMessage", {
      messageId: testMessageId,
      content: "ะะฑะฝะพะฒะปะตะฝะฝะพะต ัะตััะพะฒะพะต ัะพะพะฑัะตะฝะธะต",
      author: "Test User Updated",
    });
  }
});

socket.on("messageUpdated", (data) => {
  console.log("โ ะกะพะพะฑัะตะฝะธะต ะพะฑะฝะพะฒะปะตะฝะพ:", data.messageId);

  // ะขะตัั 6: ะะพะดัะฒะตัะถะดะตะฝะธะต ะทะฐะฒะตััะตะฝะธั
  console.log("\nโ ะขะตัั 6: ะะพะดัะฒะตัะถะดะตะฝะธะต ะทะฐะฒะตััะตะฝะธั");
  socket.emit("confirmCompletion", {
    messageId: testMessageId,
    isConfirmed: true,
  });
});

socket.on("completionConfirmed", (data) => {
  console.log(
    "โ ะะฐะฒะตััะตะฝะธะต ะฟะพะดัะฒะตัะถะดะตะฝะพ:",
    data.messageId,
    "isConfirmed:",
    data.isConfirmed
  );

  // ะขะตัั 7: ะััะพะด ะธะท ัะฐัะฐ
  console.log("\n๐ช ะขะตัั 7: ะััะพะด ะธะท ัะฐัะฐ");
  socket.emit("leaveChat", { chatId: testChatId });
});

socket.on("leftChat", (data) => {
  console.log("โ ะฃัะฟะตัะฝะพ ะฒััะตะป ะธะท ัะฐัะฐ:", data.chatId);

  // ะขะตัั 8: ะฃะดะฐะปะตะฝะธะต ัะพะพะฑัะตะฝะธั
  if (testMessageId) {
    console.log("\n๐๏ธ ะขะตัั 8: ะฃะดะฐะปะตะฝะธะต ัะพะพะฑัะตะฝะธั");
    socket.emit("deleteMessage", { messageId: testMessageId });
  } else {
    console.log("\nโ ะัะต ัะตััั ะทะฐะฒะตััะตะฝั ััะฟะตัะฝะพ!");
    socket.disconnect();
  }
});

socket.on("messageDeleted", (data) => {
  console.log("โ ะกะพะพะฑัะตะฝะธะต ัะดะฐะปะตะฝะพ:", data.messageId);
  console.log("\n๐ ะัะต ัะตััั WebSocket ะทะฐะฒะตััะตะฝั ััะฟะตัะฝะพ!");
  socket.disconnect();
});

socket.on("newMessage", (message) => {
  console.log("๐จ ะะพะปััะตะฝะพ ะฝะพะฒะพะต ัะพะพะฑัะตะฝะธะต:", message.content);
});

socket.on("userJoined", (data) => {
  console.log("๐ค ะะพะปัะทะพะฒะฐัะตะปั ะฟัะธัะพะตะดะธะฝะธะปัั:", data.socketId);
});

socket.on("userLeft", (data) => {
  console.log("๐ ะะพะปัะทะพะฒะฐัะตะปั ะฟะพะบะธะฝัะป ัะฐั:", data.socketId);
});

socket.on("error", (error) => {
  console.error("โ ะัะธะฑะบะฐ:", error);
});

socket.on("disconnect", () => {
  console.log("๐ ะัะบะปััะตะฝ ะพั ัะตัะฒะตัะฐ");
});

// ะะฑัะฐะฑะพัะบะฐ ัะธะณะฝะฐะปะพะฒ ะทะฐะฒะตััะตะฝะธั
process.on("SIGINT", () => {
  console.log("\n๐ ะะฐะฒะตััะตะฝะธะต ัะตััะฐ...");
  socket.disconnect();
  process.exit(0);
});

console.log("๐ ะะฐะฟััะบ ะฟะพะดัะพะฑะฝะพะณะพ ัะตััะฐ WebSocket...");
console.log("ะะฐะถะผะธัะต Ctrl+C ะดะปั ะทะฐะฒะตััะตะฝะธั");
