# Nginx configuration for Object Journal PWA

server {
    listen 80;
    server_name your-domain.com;
    root /var/www/object-journal/dist;
    index index.html;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        image/svg+xml;

    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Cache manifest and service worker
    location ~* \.(webmanifest|json)$ {
        expires 1w;
        add_header Cache-Control "public";
    }

    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()";

    # PWA specific headers
    add_header Service-Worker-Allowed "/";
    location = /service-worker.js {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # Handle client-side routing
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Security: deny access to hidden files
    location ~ /\. {
        deny all;
    }

    # Security: deny access to backup files
    location ~ ~$ {
        deny all;
    }
}

# HTTPS configuration (uncomment and configure if needed)
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com;
#     root /var/www/object-journal/dist;
#     index index.html;
#
#     ssl_certificate /path/to/your/certificate.crt;
#     ssl_certificate_key /path/to/your/private.key;
#
#     # Include all the location blocks from above
# }
